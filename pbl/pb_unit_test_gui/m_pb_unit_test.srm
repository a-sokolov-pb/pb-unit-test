$PBExportHeader$m_pb_unit_test.srm
forward
global type m_pb_unit_test from menu
end type
type m_file from menu within m_pb_unit_test
end type
type m_settings from menu within m_file
end type
type m_after_settings from menu within m_file
end type
type m_exit from menu within m_file
end type
type m_file from menu within m_pb_unit_test
m_settings m_settings
m_after_settings m_after_settings
m_exit m_exit
end type
type m_edit from menu within m_pb_unit_test
end type
type m_add_target from menu within m_edit
end type
type m_afeter_add_target from menu within m_edit
end type
type m_find_tests from menu within m_edit
end type
type m_run_tests from menu within m_edit
end type
type m_stop_process from menu within m_edit
end type
type m_edit from menu within m_pb_unit_test
m_add_target m_add_target
m_afeter_add_target m_afeter_add_target
m_find_tests m_find_tests
m_run_tests m_run_tests
m_stop_process m_stop_process
end type
type m_help from menu within m_pb_unit_test
end type
type m_about from menu within m_help
end type
type m_help from menu within m_pb_unit_test
m_about m_about
end type
global type m_pb_unit_test from menu
m_file m_file
m_edit m_edit
m_help m_help
end type
end forward

global type m_pb_unit_test from menu
m_file m_file
m_edit m_edit
m_help m_help
end type
global m_pb_unit_test m_pb_unit_test

on m_pb_unit_test.create
m_pb_unit_test=this
call super::create
this.m_file=create m_file
this.m_edit=create m_edit
this.m_help=create m_help
this.Item[UpperBound(this.Item)+1]=this.m_file
this.Item[UpperBound(this.Item)+1]=this.m_edit
this.Item[UpperBound(this.Item)+1]=this.m_help
end on

on m_pb_unit_test.destroy
call super::destroy
destroy(this.m_file)
destroy(this.m_edit)
destroy(this.m_help)
end on

type m_file from menu within m_pb_unit_test
m_settings m_settings
m_after_settings m_after_settings
m_exit m_exit
end type

on m_file.create
call super::create
this.text = "File"
this.m_settings=create m_settings
this.m_after_settings=create m_after_settings
this.m_exit=create m_exit
this.Item[UpperBound(this.Item)+1]=this.m_settings
this.Item[UpperBound(this.Item)+1]=this.m_after_settings
this.Item[UpperBound(this.Item)+1]=this.m_exit
end on

on m_file.destroy
call super::destroy
destroy(this.m_settings)
destroy(this.m_after_settings)
destroy(this.m_exit)
end on

type m_settings from menu within m_file
end type

event clicked;open(w_settings)

return
end event

on m_settings.create
call super::create
this.text = "Settings~tCtrl+F12"
this.shortcut = 379
end on

on m_settings.destroy
call super::destroy
end on

type m_after_settings from menu within m_file
end type

on m_after_settings.create
call super::create
this.text = "-"
end on

on m_after_settings.destroy
call super::destroy
end on

type m_exit from menu within m_file
end type

event clicked;close(parentwindow)

return
end event

on m_exit.create
call super::create
this.text = "Exit"
end on

on m_exit.destroy
call super::destroy
end on

type m_edit from menu within m_pb_unit_test
m_add_target m_add_target
m_afeter_add_target m_afeter_add_target
m_find_tests m_find_tests
m_run_tests m_run_tests
m_stop_process m_stop_process
end type

on m_edit.create
call super::create
this.text = "Edit"
this.m_add_target=create m_add_target
this.m_afeter_add_target=create m_afeter_add_target
this.m_find_tests=create m_find_tests
this.m_run_tests=create m_run_tests
this.m_stop_process=create m_stop_process
this.Item[UpperBound(this.Item)+1]=this.m_add_target
this.Item[UpperBound(this.Item)+1]=this.m_afeter_add_target
this.Item[UpperBound(this.Item)+1]=this.m_find_tests
this.Item[UpperBound(this.Item)+1]=this.m_run_tests
this.Item[UpperBound(this.Item)+1]=this.m_stop_process
end on

on m_edit.destroy
call super::destroy
destroy(this.m_add_target)
destroy(this.m_afeter_add_target)
destroy(this.m_find_tests)
destroy(this.m_run_tests)
destroy(this.m_stop_process)
end on

type m_add_target from menu within m_edit
end type

event clicked;parentwindow.triggerevent("add_target")

return
end event

on m_add_target.create
call super::create
this.text = "Add target~tCtrl+T"
this.shortcut = 340
end on

on m_add_target.destroy
call super::destroy
end on

type m_afeter_add_target from menu within m_edit
end type

on m_afeter_add_target.create
call super::create
this.text = "-"
end on

on m_afeter_add_target.destroy
call super::destroy
end on

type m_find_tests from menu within m_edit
end type

event clicked;parentwindow.triggerevent("find_tests")

return
end event

on m_find_tests.create
call super::create
this.text = "Find tests~tF5"
this.enabled = false
this.shortcut = 116
end on

on m_find_tests.destroy
call super::destroy
end on

type m_run_tests from menu within m_edit
end type

event clicked;parentwindow.triggerevent("run_tests")

return
end event

on m_run_tests.create
call super::create
this.text = "Run tests~tCtrl+R"
this.enabled = false
this.shortcut = 338
end on

on m_run_tests.destroy
call super::destroy
end on

type m_stop_process from menu within m_edit
end type

event clicked;parentwindow.triggerevent("stop_process")

return
end event

on m_stop_process.create
call super::create
this.text = "Stop process~tCtrl+S"
this.enabled = false
this.shortcut = 339
end on

on m_stop_process.destroy
call super::destroy
end on

type m_help from menu within m_pb_unit_test
m_about m_about
end type

on m_help.create
call super::create
this.text = "Help"
this.m_about=create m_about
this.Item[UpperBound(this.Item)+1]=this.m_about
end on

on m_help.destroy
call super::destroy
destroy(this.m_about)
end on

type m_about from menu within m_help
end type

on m_about.create
call super::create
this.text = "About"
end on

on m_about.destroy
call super::destroy
end on

event clicked;open(w_about)

return
end event

